/*
 * Nav REST API
 * Documentation Nav portal REST API
 *
 * The version of the OpenAPI document: 0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.nav.statusportalgcppoll;

import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

/**
* ServiceDto
*/
public class ServiceDto {

    private String name = null;

    private UUID id = null;

    private String team = null;

    private String pollingUrl = null;

    private Boolean statusNotFromTeam = null;

    public static String[] readOnlyFields() {
        return new String[] {
                "id",
        };
    }

    public static String[] writeOnlyFields() {
        return new String[] {
        };
    }



    public void readOnlyFieldsWithValue(List<String> result) {
        if (!isMissing(getId())) {
            result.add("ServiceDto.id");
        }
    }

    private boolean isMissing(String s) {
        return s == null || s.isEmpty();
    }

    private boolean isMissing(List<?> list) {
        return list == null;
    }

    private boolean isMissing(Object s) {
        return s == null;
    }


    /**
     * Get name
     * @return name
     */
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public ServiceDto name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get id
     * read only
     * @return id
     */
    public UUID getId() {
        return id;
    }

    /** <strong>read only</strong> */
    public void setId(UUID id) {
        this.id = id;
    }

    public ServiceDto id(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Get team
     * @return team
     */
    public String getTeam() {
        return team;
    }

    public void setTeam(String team) {
        this.team = team;
    }

    public ServiceDto team(String team) {
        this.team = team;
        return this;
    }


    /**
     * Get pollingUrl
     * @return pollingUrl
     */
    public String getPollingUrl() {
        return pollingUrl;
    }

    public void setPollingUrl(String pollingUrl) {
        this.pollingUrl = pollingUrl;
    }

    public ServiceDto pollingUrl(String pollingUrl) {
        this.pollingUrl = pollingUrl;
        return this;
    }


    /**
     * Get statusNotFromTeam
     * @return statusNotFromTeam
     */
    public Boolean getStatusNotFromTeam() {
        return statusNotFromTeam;
    }

    public void setStatusNotFromTeam(Boolean statusNotFromTeam) {
        this.statusNotFromTeam = statusNotFromTeam;
    }

    public ServiceDto statusNotFromTeam(Boolean statusNotFromTeam) {
        this.statusNotFromTeam = statusNotFromTeam;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ServiceDto service = (ServiceDto) o;
        return Objects.equals(this.getName(), service.getName()) &&
                Objects.equals(this.getId(), service.getId()) &&
                Objects.equals(this.getTeam(), service.getTeam()) &&
                    Objects.equals(this.getStatusNotFromTeam(), service.getStatusNotFromTeam());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getName(), getId(),  getTeam(), getPollingUrl(),  getStatusNotFromTeam());
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ServiceDto {\n");
        sb.append("    name: ").append(toIndentedString(getName())).append("\n");
        sb.append("    id: ").append(toIndentedString(getId())).append("\n");
        sb.append("    team: ").append(toIndentedString(getTeam())).append("\n");
        sb.append("    pollingUrl: ").append(toIndentedString(getPollingUrl())).append("\n");
        sb.append("    statusNotFromTeam: ").append(toIndentedString(getStatusNotFromTeam())).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

